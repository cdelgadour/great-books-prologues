{"version":3,"sources":["Components/UI/Backdrop/Backdrop.module.css","hoc/Layout/Layout.module.css","Components/UI/Spinner/Spinner.module.css","Components/AnswerArea/Button/Button.js","Components/BookInfo/BookInfo.js","Components/AnswerArea/AnswerArea.js","Containers/BookQuotes/BookQuotes.js","Components/UI/Backdrop/Backdrop.js","Components/Toolbar/NavItems/NavItem.js","Components/SideDrawer/Sidedrawer.js","Components/SideDrawer/DrawerToggle/DrawerToggle.js","Components/Toolbar/Toolbar.js","hoc/Layout/Layout.js","axios-add.js","Containers/AddQuote/AddQuote.js","Components/UI/Spinner/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Backdrop","Layout","App","loader","load2","Button","props","react_default","a","createElement","onClick","clicked","bookTitle","BookInfo","assignedClasses","join","correct","className","authorName","nextTitle","AnswerArea","content","titles","map","title","i","AnswerArea_Button_Button","key","checkAnswer","Components_BookInfo_BookInfo","BookQuotes","state","_this","turnData","answered","openMenu","wrongAnswersIDs","answerHandler","bookInfo","setState","prevState","concat","nextTitleHandler","Object","objectSpread","this","text","Components_AnswerArea_AnswerArea","bookList","display","author","wrongAnswers","Component","show","classes","close","NavItem","children","react_router_dom","to","path","withRouter","attachedClasses","open","UI_Backdrop_Backdrop","Toolbar_NavItems_NavItem","drawerToggle","Toolbar","DrawerToggle_DrawerToggle","openDrawer","toggleSidedrawer","addAuthor","SideDrawer_Sidedrawer","Components_Toolbar_Toolbar","instance","axios","create","baseURL","addQuote","withFormik","mapPropsToValues","bookAuthor","bookQuote","validationSchema","Yup","shape","required","handleSubmit","values","_ref2","resetForm","setErrors","setStatus","quoteData","post","then","formStatus","setTimeout","fetchData","catch","e","console","log","formError","_ref","errors","touched","status","isSubmitting","formik_esm","undefined","length","type","name","placeholder","component","disabled","Spinner","shuffle","arr","temporaryValue","randomIndex","currentIndex","Math","floor","random","loaded","getDataFromDB","get","response","data","quotes","addQuoteHandler","getTurnData","booksArray","allQuotes","book","push","splice","_this2","bookPrologue","UI_Spinner_Spinner","react_router","exact","render","matchProps","Containers_BookQuotes_BookQuotes","assign","hoc_Layout_Layout","AddQuote_AddQuote","updateQuotes","Boolean","window","location","hostname","match","app","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1451219.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2id_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2IMf4\",\"App\":\"Layout_App__3uoT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__35_IE\",\"load2\":\"Spinner_load2__aixSK\"};","import React from 'react';\nimport './Button.scss'\n\nconst Button = props => {\n    return (<button onClick={() => props.clicked(props.bookTitle)}>{props.bookTitle}</button>)\n};\n\nexport default Button;\n","import React from 'react';\nimport './BookInfo.scss'\n\n\nconst BookInfo = (props) => {\n    let assignedClasses = ['BookInfo','Incorrect'].join(' ') ;\n    if (props.correct) {\n        assignedClasses = ['BookInfo', 'Correct'].join(' ');\n    }\n\n    return (<div className={assignedClasses}>\n            <h3>Correct!</h3>\n            <h3><em>{props.bookTitle}</em> by {props.authorName}</h3>\n            <button onClick={props.nextTitle}>Next</button>\n        </div>);\n};\n\nexport default BookInfo;\n","import React from 'react';\nimport Button from './Button/Button'\nimport './AnswerArea.scss'\nimport BookInfo from '../BookInfo/BookInfo'\n\nconst AnswerArea = props => {\n    let content = props.titles.map( (title, i) => <Button bookTitle={title} key={i} clicked={props.checkAnswer}></Button> )\n\n    if (props.correct) {\n        content = (<BookInfo bookTitle={props.bookTitle}\n                             authorName={props.authorName}\n                             correct={props.correct}\n                             nextTitle={props.nextTitle}/>);\n    }\n\n    return (<div className=\"AnswerArea\">\n        {content}\n    </div>)\n};\n\nexport default AnswerArea;\n","import React, { Component } from 'react';\nimport AnswerArea from '../../Components/AnswerArea/AnswerArea'\nimport './BookQuotes.scss'\n\n\nclass BookQuotes extends Component {\n    state = {\n        ...this.props.turnData(),\n        answered: null,\n        openMenu: false,\n        wrongAnswersIDs: []\n    };\n\n    answerHandler = title => {\n        if (this.state.bookInfo.bookTitle === title) this.setState({\n            answered: true,\n            wrongAnswersIDs: []\n        });\n        else this.setState(prevState => ({\n            answered: false,\n            wrongAnswersIDs: prevState.wrongAnswersIDs.concat(title)\n        }));\n    };\n\n    nextTitleHandler = () => {\n       const turnData = {...this.props.turnData()};\n       this.setState({\n           ...turnData,\n           answered: null\n       })\n    };\n\n    render() {\n        return (<div className=\"BookQuotes\">\n            <div className=\"Quote-Body fade-in\">\n                    {this.state.bookInfo.text}\n                    </div>\n\n            <AnswerArea titles={this.state.bookList}\n                        checkAnswer={this.answerHandler}\n                        display={this.state.answered}\n                        bookTitle={this.state.bookInfo.bookTitle}\n                        authorName={this.state.bookInfo.author}\n                        correct={this.state.answered}\n                        nextTitle={this.nextTitleHandler}\n                        wrongAnswers={this.state.wrongAnswersIDs}>\n            </AnswerArea>\n        </div>)\n    }\n}\n\nexport default BookQuotes;\n","import React from 'react';\nimport classes from './Backdrop.module.css'\n\nconst Backdrop = (props) =>\n    props.show ? <div className={classes.Backdrop} onClick={props.close}></div> : null\n\nexport default Backdrop;\n","import React from 'react';\nimport './NavItem.scss'\nimport { Link } from 'react-router-dom';\n\nconst NavItem = props => {\n    return(props.children ? <li className='NavItem'>\n        <Link to={props.path} onClick={props.clicked}>\n            {props.children}\n        </Link>\n    </li> : null );\n};\n\nexport default NavItem;\n","import React from 'react'\nimport './Sidedrawer.scss'\nimport Backdrop from '../UI/Backdrop/Backdrop'\nimport NavItem from '../Toolbar/NavItems/NavItem'\nimport {withRouter} from 'react-router-dom';\n\nconst SideDrawer = (props) => {\n    let attachedClasses = ['Sidedrawer'];\n    if (props.open) {\n        attachedClasses = ['Sidedrawer', 'Open'];\n    }\n\n    return (\n        <div>\n            <Backdrop show={props.open} close={props.clicked}/>\n            <div className={attachedClasses.join(' ')}>\n                <h2 className=\"close\" onClick={props.clicked}>&times;</h2>\n                <ul className=\"NavItems\">\n                    <NavItem path=\"/\" clicked={props.clicked}>Home</NavItem>\n                    <NavItem path=\"/add-quote\" clicked={props.clicked}>Add a quote!</NavItem>\n                </ul>\n            </div>\n        </div>)\n};\n\nexport default withRouter(SideDrawer);\n","import React from 'react';\nimport './DrawerToggle.scss';\n\nconst drawerToggle = (props) => {\n    return (<div className=\"DrawerToggle\" onClick={props.open}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>)\n};\n\nexport default drawerToggle;\n","import React from 'react';\nimport './Toolbar.scss';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\nimport NavItem from './NavItems/NavItem'\n\nconst Toolbar = props => {\n    return (\n        <header className=\"Toolbar\">\n            <DrawerToggle open={props.clicked}/>\n            <h1 className=\"Title\">Book Quotes</h1>\n            <ul className=\"navItems\">\n                <NavItem path=\"/\">Home</NavItem>\n                <NavItem path=\"/add-quote\">Add Quote!</NavItem>\n            </ul>\n        </header>)\n};\n\nexport default Toolbar;\n","import React, { Component } from 'react'\nimport SideDrawer from \"../../Components/SideDrawer/Sidedrawer\";\nimport Toolbar from '../../Components/Toolbar/Toolbar'\nimport classes from './Layout.module.css'\n\nclass Layout extends Component {\n    state = {\n        openDrawer: false\n    };\n\n    toggleSidedrawer = () => {\n        this.setState(prevState => ({\n            openDrawer: !prevState.openDrawer\n        }))\n    };\n\n    addAuthor = () => {\n        this.toggleSidedrawer();\n    };\n\n  render() {\n      return (<div className={classes.Layout}>\n          <SideDrawer open={this.state.openDrawer}\n                      clicked={this.toggleSidedrawer}/>\n          <Toolbar clicked={this.toggleSidedrawer}/>\n          {this.props.children}\n      </div>)\n  }\n};\n\nexport default Layout;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://great-books-5f716.firebaseio.com/'\n});\n\nexport default instance;\n","import React from 'react';\nimport './AddQuote.scss'\nimport { withFormik, Form, Field } from 'formik'\nimport * as Yup from 'yup'\nimport axios from \"../../axios-add\";\n\nconst addQuoteForm = ({values,\n                      errors,\n                      touched,\n                          status,\n                      isSubmitting}) => {\n    return <Form className=\"addQuoteForm\">\n        <h1>Add a quote</h1>\n        {status && touched.length !== undefined ? <h2>{status.formStatus}</h2> : null}\n        <div className=\"inputContainer\">\n            <Field type=\"text\" name=\"bookTitle\" placeholder=\"Name of the book\"/>\n            {touched.bookTitle && errors.bookTitle? <p className=\"formError\">{errors.bookTitle}</p> : null}\n        </div>\n        <div className=\"inputContainer\">\n            <Field type=\"text\" name=\"bookAuthor\" placeholder=\"Name of the author\"/>\n            {touched.bookAuthor && errors.bookAuthor ? <p className=\"formError\">{errors.bookAuthor}</p> : null}\n        </div>\n        <div className=\"inputContainer\">\n            <Field type=\"text\" component=\"textarea\" name=\"bookQuote\" placeholder=\"Please write the quote...\"/>\n            {touched.bookQuote && errors.bookQuote ? <p className=\"formError\">{errors.bookQuote}</p> : null}\n        </div>\n        <button type=\"submit\" disabled={isSubmitting}>Add Quote</button>\n        <div className=\"status\">\n            {status ? <h2>{status.formStatus}</h2> : null}\n            {errors ? <h2>{errors.formError}</h2> : null}\n        </div>\n    </Form>\n};\n\nconst addQuote = withFormik({\n    mapPropsToValues: () => ({\n        bookTitle: \"\",\n        bookAuthor: \"\",\n        bookQuote: \"\"\n    }),\n    validationSchema: Yup.object().shape({\n        bookTitle: Yup.string().required(\"This is a required field\"),\n        bookAuthor: Yup.string().required(\"This is a required field\"),\n        bookQuote: Yup.string().required(\"This is a required field\")\n    }),\n\n    handleSubmit(values, {props, resetForm, setErrors, setStatus}) {\n        const quoteData = {author: values.bookAuthor, bookTitle: values.bookTitle, text: values.bookQuote};\n        axios.post('/authors/-LaXx5hXMY-QQ9yn9rSv.json', quoteData)\n            .then(() => {\n                setStatus({formStatus: \"Quote added!\"});\n                setTimeout(() => resetForm(), 2000);\n                props.fetchData();\n            })\n            .catch(e => {\n                console.log(e);\n                setErrors({formError: \"An error has ocurred :(\"});\n                setTimeout(() => resetForm(), 2000);\n                });\n    }\n\n})(addQuoteForm);\n\nexport default addQuote;\n","import React from 'react'\nimport classes from './Spinner.module.css'\n\nconst Spinner = () => {\n    return (<div className={classes.loader}>Loading...</div>)\n};\n\nexport default Spinner;\n\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport BookQuotes from './Containers/BookQuotes/BookQuotes'\nimport Layout from './hoc/Layout/Layout'\nimport './App.css';\nimport axios from './axios-add';\nimport AddQuote from './Containers/AddQuote/AddQuote'\nimport Spinner from './Components/UI/Spinner/Spinner'\n\nconst shuffle = (arr) => {\n    var currentIndex = arr.length, temporaryValue, randomIndex;\n\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = arr[currentIndex];\n        arr[currentIndex] = arr[randomIndex];\n        arr[randomIndex] = temporaryValue;\n    }\n    return arr;\n};\n\nclass App extends Component {\n    state = {\n        loaded: false\n    };\n\n\n    componentDidMount() {\n        this.getDataFromDB();\n    }\n\n    getDataFromDB = () => {\n        axios.get('/authors/-LaXx5hXMY-QQ9yn9rSv.json')\n            .then(response => {\n                let data = response.data;\n                this.setState({quotes: data, loaded: true});\n            })\n            .catch(e => console.log(e));\n    };\n\n    addQuoteHandler = (data) => {\n        axios.post('/authors/-LaXx5hXMY-QQ9yn9rSv.json', data)\n            .then(() => this.getDataFromDB())\n            .catch(e => console.log(e));\n    };\n\n    getTurnData = () => {\n        let booksArray = [];\n        let bookInfo;\n        let allQuotes = {...this.state.quotes};\n        for (let book in allQuotes) {\n            booksArray.push(allQuotes[book].bookTitle);\n        }\n\n        booksArray = shuffle(booksArray).splice(0, 4);\n        let correct = booksArray[Math.floor(Math.random() * booksArray.length)];\n\n        for (let book in allQuotes) {\n            if (allQuotes[book].bookTitle === correct) bookInfo = {...allQuotes[book]};\n        }\n\n        return {\n            bookInfo: {...bookInfo},\n            bookList: booksArray\n        }\n    };\n  render() {\n      let bookPrologue = <Spinner/>;\n     if (this.state.loaded) {\n          bookPrologue = <Route path=\"/\" exact render={(matchProps) => <BookQuotes turnData={this.getTurnData} {...matchProps}/>}/>;\n      }\n    return (\n          <Layout>\n              {bookPrologue}\n              <Route path='/add-quote' render={ (matchProps) => <AddQuote updateQuotes={this.addQuoteHandler} fetchData={this.getDataFromDB} {...matchProps}/>}/>\n          </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nconst app = (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n);\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}